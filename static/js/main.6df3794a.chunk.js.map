{"version":3,"sources":["assets/images/mie-ayam-bakso.jpg","components/Navbar.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/Footer/Footer.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","Home","changeKeywordHandler","event","setState","keyword","target","seachHandler","state","url","axios","get","headers","params","q","then","data","console","log","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","Footer","href","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesData","searchHandler","restaurants","entity_id","entity_type","renderRestaurantList","Keyword","match","RestaurantProfile","class","featured_image","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.6df3794a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mie-ayam-bakso.00031694.jpg\";","import React from 'react'\nimport { Link } from 'react-router-dom' \n\nconst Navbar =() => (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\n        <Link className=\"navbar-brand\" to=\"/\">FoodParadise</Link>\n    </nav>\n)\n\nexport default Navbar","import React from 'react'\nimport mainImage from \"/var/www/foodparadise/src/assets/images/mie-ayam-bakso.jpg\";\n\nconst ImageAndWelcome = () => (\n    <div className=\"container-fluid\">\n        <div className=\"row\" style={{ marginBottom: 30 }}>\n          <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\" ></img>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"card text-white bg-success mb-3 text-center\">\n              <div className=\"card-header\"><h1>Welcome to FoodParadise</h1></div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\n                <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\n                <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n)\n\nexport default ImageAndWelcome","import React from 'react'\nimport { Link } from 'react-router-dom' \n\nconst CityCard = (props) => (\n    <div className=\"col-4\">\n        <div className=\"card bg-light mb-3\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">{props.city.name}</h4>\n                <p>{props.city.country_name}</p>\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\n            </div>\n        </div>\n    </div>\n);\n\nexport default CityCard","import React from 'react'\nimport CityCard from './CityCard'\n\nconst CityList = (props) => (\n    <>\n    <div className=\"row\">\n        <div className=\"col-12\">\n            <h3>{props.title}</h3>\n{props.showSubtitle === true && props.subtitle !== '' && <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}'</h6>} \n        </div>\n    </div>\n    <div className=\"row\">\n        { props.cities == null ? (\n            <div className=\"col\">\n                <p>Loading . . . </p>\n            </div>\n        ) : (\n            _renderCityList(props.cities)\n        )}\n    </div>\n    </>    \n);\n\nconst _renderCityList = (cities) => {\n    if(cities.length > 0) {\n      return (\n        cities.map(city =>\n          <CityCard key={city.id} city={city} />\n        )\n      )\n    } else {\n      return (\n        <div className=\"col\">\n          <p className=\"text-danger\">Data not found !</p>\n        </div>\n      )\n    }\n  }\n\nexport default CityList\n\n","import React from 'react'\n\nconst SearchCity = (props) => (\n    <div className=\"col\">\n        <h3>Search City</h3>\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"form-row\">\n                    <div className=\"col-11\">\n                        <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Type keyword or city name\"\n                        value={props.value}\n                        onChange={props.onChange}\n                        />\n                    </div>\n                    <div className=\"col-1\">\n                        <button \n                        className=\"btn btn-primary\" \n                        type=\"button\"\n                        onClick={props.onClickSearch}>\n                            Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default SearchCity","export const API = {\n    zomato: {\n      baseUrl: \"https://developers.zomato.com/api/v2.1\",\n      api_key: \"e0e2b26a08334228c5b8850fed94b721\"\n    }\n  }","import React, { Component } from 'react'\nimport ImageAndWelcome from '../components/ImageAndWelcome'\nimport CityList from '../components/CityList'\nimport SearchCity from '../components/SearchCity'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nclass Home extends Component {\n    constructor(){\n        super();\n        this.state = {\n            featuredCities: null,\n            keyword: \"\",\n            citiesResultSearch: null,\n            cityKeywordSearch: \"\"\n        };\n      }\n    \n    changeKeywordHandler = (event) => {\n        this.setState({ keyword: event.target.value });\n    };\n\n    seachHandler = () => {\n        let keyword = this.state.keyword;\n        var url = `${API.zomato.baseUrl}/cities`;\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            }, \n            params: {\n                q: keyword\n            }\n        }).then(({data}) => {\n            console.log(data);\n            if (data.status === \"success\") {\n                this.setState({citiesResultSearch: data.location_suggestions, keyword: '', cityKeywordSearch: keyword},)\n            }\n        }).catch(err => console.log(err));\n    }\n\n    getFeaturedCities = () => {\n        var url = `${API.zomato.baseUrl}/cities`;\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            }, \n            params: {\n                city_ids: \"74,11052,170\"\n            }\n        }).then(({data}) => {\n            if (data.status === \"success\") {\n                this.setState({featuredCities: data.location_suggestions})\n            }\n        }).catch(err => console.log(err));\n    };\n\n    componentDidMount(){\n        this.getFeaturedCities();\n    }\n\n    render() {\n        const citiesDummy = [\n            { id: 74, name: 'Jakarta', country_name: 'Indonesia' },\n            { id: 11052, name: 'Bandung', country_name: 'Indonesia' },\n            { id: 170, name: 'Bali', country_name: 'Indonesia' },\n          ];\n\n        return (\n            <>\n            <ImageAndWelcome />\n        \n            <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n                <CityList \n                    title={'Featured Cities'} \n                    cities={this.state.featuredCities} \n                />  \n                <SearchCity \n                    value={this.state.keyword}\n                    onChange={this.changeKeywordHandler}\n                    onClickSearch={this.seachHandler}\n                />\n\n                {\n                    this.state.cityKeywordSearch !== '' && (\n                        <CityList \n                            title={'Search Result'} \n                            cities={this.state.citiesResultSearch} \n                            showSubtitle={true}\n                            subtitle={this.state.cityKeywordSearch}\n                        /> \n                    )\n                }\n                \n            </div>\n            </>\n        )\n    }\n} \n\nexport default Home","import React from 'react'\nimport './Footer.css';\n\nconst Footer = () => (\n    <footer className=\"my-footer\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-4 text-center\">\n                    <h5>About FoodParadise</h5>\n                    <ul>\n                    <li><a href=\"/#\">About Us</a></li>\n                    <li><a href=\"/#\">Contact Us</a></li>\n                    </ul>\n                </div>\n                <div className=\"col-sm-4 text-center\">\n                    <h5>Support</h5>\n                    <ul>\n                    <li><a href=\"/#\">FAQ</a></li>\n                    <li><a href=\"/#\">Help desk</a></li>\n                    <li><a href=\"/#\">Forums</a></li>\n                    </ul>\n                </div>\n                <div className=\"col-sm-4 text-center\">\n                    <h5>Download App</h5>\n                    <ul>\n                    <li><a href=\"/#\">Google Play</a></li>\n                    <li><a href=\"/#\">App Store</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div className=\"social-networks\">\n            <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\n            <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\n            <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\n        </div>\n        <div className=\"text-center footer-copyright\">\n            <p>Copyright &copy; 2019 FoodParadise </p>\n        </div>\n    </footer>\n)\n\nexport default Footer","import React from 'react'\n\nconst CategoryList = (props) => (\n    props.categories ? (\n        <div className=\"list-group\">\n        {props.categories.map(category => (\n            <button\n                key={category.id}\n                className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '' )}\n                onClick={() => props.categoryClickHandler(category)}\n            >\n            {category.name}\n            </button>\n        ))}\n        </div>\n    ) : (\n        <p>Loading... </p>\n    )\n)\n\nexport default CategoryList","import React from 'react'\n\nconst SearchKeyword = (props) => (\n    <>\n    <h5>Keyword</h5>\n    <div className=\"card\">\n        <div className=\"card-body\">\n            <div className=\"form-row\">\n                <div className=\"col-10\">\n                    <input \n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"type keyword i.e : restaurant name, location, cuisine, etc\"\n                        value={props.keyword}\n                        onChange={props.changeKeywordHandler}\n                    />\n                </div>\n                <div className=\"col\">\n                    <button\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        onClick={props.onClickAddToCriteria}    \n                    >\n                            Add to criteria\n                    </button>\n                </div>\n                \n            </div>\n        </div>\n    </div> \n    </>   \n)\n\nexport default SearchKeyword","import React from 'react'\n\nconst SearchCriteria = (props) => (\n    <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\n        <div className=\"card-body\">\n            <p className=\"card-title\">Find Restaurants based on criteria : </p>\n            <table className=\"table table-hover\">\n                <tbody>\n                {props.criteria.map((cri, index) => \n                    <tr key={index} className=\"table-active\">\n                        <td width=\"40%\">{cri.criteriaName}</td>\n                        <td width=\"50%\">{cri.data.name}</td>\n                        <td>\n                            {cri.criteriaName !== 'City' && (\n                            <i\n                                className=\"fa fa-times\"\n                                aria-hidden=\"true\"\n                                style={{ color: 'red' }}\n                                onClick={() => props.removeCriteriaHandler(index)}\n                            ></i>\n                            )}\n                        </td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n            <div className=\"pull-right\">\n                <button\n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    onClick={props.onClickSearch}\n                >\n                    Search\n                </button>\n            </div>\n        </div>\n    </div>\n)\n\nexport default SearchCriteria","import React from 'react'\n\nconst RatingLabel = (props) => (\n    <div className=\"btn btn-sm\"\n            style={{\n                color: 'white',\n                backgroundColor: `#${props.labelColor}`,\n                borderColor: `#${props.labelColor}`,\n            }}\n        >\n            {props.text}\n    </div>    \n)\n\nexport default RatingLabel","import React from 'react'\nimport { Link } from 'react-router-dom' \nimport RatingLabel from '../components/RatingLabel'\n\nconst RestaurantCard = (props) => (\n    <div className=\"col-6\" style={{ marginBottom: 20 }}>\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\n                    </div>\n                    <div className=\"col-9\">\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                        <h6>{props.restaurant.location.locality}</h6>\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <table className=\"table\">\n                    <tbody>\n                    <tr>\n                        <td>Rating</td>\n                        <td>\n                        <RatingLabel   \n                            labelColor={props.restaurant.user_rating.rating_color}\n                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \n                        />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Cuisines</td>\n                        <td>\n                        {props.restaurant.cuisines}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Cost for two</td>\n                        <td>\n                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"card-footer\">\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\n                    <button type=\"button\" className=\"btn btn-outline-success btn-block\">\n                    View Restaurant Details\n                    </button>\n                </Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default RestaurantCard","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API } from '../config/api'\nimport CategoryList from '../components/CategoryList'\nimport SearchKeyword from '../components/SearchKeyword'\nimport SearchCriteria from '../components/SearchCriteria'\nimport RestaurantCard from '../components/RestaurantCard'\n\nconst categoriesDummy = [\n    {\n      \"categories\": {\n        \"id\": 1,\n        \"name\": \"Delivery\"\n      }\n    },\n    {\n      \"categories\": {\n        \"id\": 2,\n        \"name\": \"Dine-out\"\n      }\n    },\n    {\n      \"categories\": {\n        \"id\": 3,\n        \"name\": \"Nightlife\"\n      }\n    },\n    {\n      \"categories\": {\n        \"id\": 4,\n        \"name\": \"Catching-up\"\n      }\n    }\n  ];\n\n\nclass City extends Component {\n    constructor() {\n        super()\n        this.state = {\n            city: null,\n            categories:null,\n            categorySelected: null,\n            Keyword: '',\n            criteria: [],\n            restaurant: []\n        };\n    }\n\n    transformCategoriesData = categories => {\n        let categoriesTransformed = categories.map(category => { \n          return category.categories;\n        })\n    \n        return categoriesTransformed;\n    }\n\n    getCityData = (city_id) => {\n        let url = `${API.zomato.baseUrl}/cities`\n        axios.get(url, {\n          headers: {\n            'user-key': API.zomato.api_key\n          },\n          params: {\n            city_ids: `${city_id}`\n          }\n        })\n          .then(({ data }) => {\n            let city = data.location_suggestions[0]\n            let newCriteria = {\n                criteriaName: 'City',\n                data: city\n            }\n            let criteria = [...this.state.criteria]\n                criteria.push(newCriteria)\n            this.setState({ city, criteria })\n          })\n          .catch(err => console.log(err))\n    }\n\n    componentDidMount () {\n        // cara mendapatkan parameter city_id dari url / route\n        let { city_id } = this.props.match.params\n            console.log(this.props.match)\n        this.getCityData(city_id)\n        // proses transform data categories\n        // let categories = this.transformCategoriesData(categoriesDummy)\n        // this.setState({ categories })\n        this.getCategoriesData()\n    }\n\n    categoryClickHandler = (category) => {\n        let criteria = [...this.state.criteria]\n        // ambil element array selain element dengan criteriaName 'Category' \n        criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\n        let newCriteria = {\n            criteriaName: 'Category',\n            data: category\n        }\n        criteria.push(newCriteria)\n        this.setState({ categorySelected: category, criteria })\n    }\n\n    changeKeywordHandler = (event) => {\n        this.setState({ keyword: event.target.value });\n    }\n\n    addToCriteriaHandler = () => {\n        let criteria = [...this.state.criteria]\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\n        let newCriteria = {\n          criteriaName  : 'Keyword',\n          data          : {\n            name: this.state.keyword\n          }\n        }\n    \n        criteria.push(newCriteria)\n        this.setState({ keyword: '', criteria })\n      }\n\n    removeCriteriaHandler = (index) => {\n        let criteria = [...this.state.criteria]\n        criteria.splice(index, 1)\n        this.setState({ criteria })\n    }\n\n    getCategoriesData = () => {\n        let url = `${API.zomato.baseUrl}/categories`\n        axios.get(url, {\n          headers: {\n            'user-key': API.zomato.api_key\n          }\n        })\n          .then(({ data }) => {\n            // proses transform data categories\n            let categories = this.transformCategoriesData(data.categories)\n            this.setState({ categories })\n          })\n          .catch(err => console.log(err))\n    }\n\n    searchHandler = () => {\n        this.setState({restaurants: null})\n        let url = `${API.zomato.baseUrl}/search`\n        let params = {}\n    \n        for (let  cri of this.state.criteria) {\n    \n          switch (cri.criteriaName) {\n            case 'City' : \n              params.entity_id    = cri.data.id\n              params.entity_type  = 'city'\n              break\n            case 'Category' : \n              params.category     = cri.data.id\n              break\n            case 'Keyword' : \n              params.q            = cri.data.name\n              break\n            default : break\n          }\n    \n        }\n    \n        axios.get(url, {\n          headers: {\n            'user-key': API.zomato.api_key\n          },\n          params\n        })\n          .then(({ data }) => {\n            this.setState({ restaurants : data.restaurants })\n          })\n          .catch(err => console.log(err))\n    }\n\n    renderRestaurantList = () => {\n        if(this.state.restaurants == null) {\n          return (\n            <div className=\"col\">\n              <p>Loading...</p> \n            </div>\n          )\n        }\n    \n        if(this.state.restaurants.length > 0) {\n          return (\n            this.state.restaurants.map(({ restaurant }) => (\n              <RestaurantCard key={restaurant.id} restaurant={restaurant} />\n            ))\n          )\n        } else {\n          return (\n            <div className=\"col\">\n              <p>No Data available. Please select criteria, and click Search</p>\n            </div>\n          )\n        }\n      }\n    \n    render(){\n        return (\n            <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\n                { this.state.city && (\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4 className=\"text-success\">\n                            Restaurant in { this.state.city.name }, {\" \"}\n                            { this.state.city.country_name }\n                            </h4>\n                        </div>\n                    </div>\n                )}\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <h5>Categories</h5>\n                        <CategoryList \n                            categories={this.state.categories}\n                            categorySelected={this.state.categorySelected}\n                            categoryClickHandler={(category) => this.categoryClickHandler(category)}\n                        />                        \n                    </div>\n                    <div className=\"col\">\n                        <SearchKeyword\n                            keyword={this.state.keyword}\n                            changeKeywordHandler={this.changeKeywordHandler}\n                            onClickAddToCriteria={this.addToCriteriaHandler}\n                        />\n                        <SearchCriteria \n                            criteria={this.state.criteria}\n                            removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\n                            onClickSearch={this.searchHandler}\n                        />\n                        <div className=\"row\">\n                            <div className=\"col\" style={{ marginBottom: 10 }}>\n                                <h4 className=\"text-success\">Restaurant List</h4>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            {\n                                this.renderRestaurantList()\n                            }                    \n                        </div>\n                    </div>    \n                </div>                \n            </div>\n        );\n    }\n}\n\nconst restaurants = [\n    {\n      \"restaurant\": {\n        \"id\": \"18875696\",\n        \"name\": \"Kintaro Sushi\",\n        \"location\": {\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\n          \"locality\": \"Senopati\",\n        },\n        \"cuisines\": \"Sushi, Japanese\",\n        \"average_cost_for_two\": 200000,\n        \"currency\": \"IDR\",\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\n        \"user_rating\": {\n          \"aggregate_rating\": \"4.9\",\n          \"rating_text\": \"Excellent\",\n          \"rating_color\": \"3F7E00\",\n          \"votes\": \"1358\"\n        },\n      }\n    },\n    {\n      \"restaurant\": {\n        \"id\": \"18875696\",\n        \"name\": \"Kintaro Sushi\",\n        \"location\": {\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\n          \"locality\": \"Senopati\",\n        },\n        \"cuisines\": \"Sushi, Japanese\",\n        \"average_cost_for_two\": 200000,\n        \"currency\": \"IDR\",\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\n        \"user_rating\": {\n          \"aggregate_rating\": \"4.9\",\n          \"rating_text\": \"Excellent\",\n          \"rating_color\": \"3F7E00\",\n          \"votes\": \"1358\"\n        },\n      }\n    }\n  ] \n\nexport default City","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst RestaurantProfile = (props) => (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    {props.restaurant ? (\n                        <>\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                        <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n                        </>\n                        ) : (\n                        <p>Loading...</p>\n                    )}                        \n                </div>\n            </div>\n        </div>\n        <div className=\"card-body\">\n            {props.restaurant ? (\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\n                </div>\n            <div className=\"col-6\">\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Rating</td>\n                            <td>\n                            <RatingLabel   \n                                labelColor={props.restaurant.user_rating.rating_color}\n                                text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \n                            />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Cuisines</td>\n                            <td>\n                                {props.restaurant.cuisines}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Cost for two</td>\n                            <td>\n                                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            </div>\n            ) : (\n                <p>Loading...</p>\n            )}                    \n        </div>\n    </div>  \n)\n\nexport default RestaurantProfile","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst Review = (props) => (\n    <div className=\"card border-success\" style={{ marginBottom: 5 }}>\n        <div className=\"card-body\">\n            <div className=\"row\" \n                style={{ marginBottom: 20 }}>\n                <div className=\"col-1\" \n                    style={{ border: '0px solid black' }}>\n                    <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\n                </div>\n                <div className=\"col-11\" \n                    style={{ border: '0px solid black' }}>\n                    <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\n                        <RatingLabel\n                            text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\n                            labelColor={`${props.review.user.foodie_color}`}\n                        />\n                </div>\n            </div>\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\n                <RatingLabel\n                    text={`${props.review.rating} (${props.review.rating_text})`}\n                    labelColor={`${props.review.rating_color}`}\n                />\n            <p className=\"card-text\">{props.review.review_text}</p>\n        </div>\n    </div>\n)\n\nexport default Review","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API } from '../config/api'\nimport RatingLabel from '../components/RatingLabel'\nimport RestaurantProfile from '../components/RestaurantProfile'\nimport Review from '../components/Review'\n\nclass RestaurantDetail extends Component {\n    constructor () {\n        super()\n        this.state = {\n          restaurant: null,\n          reviews: null\n        }\n    }\n\n    componentDidMount () {\n        let { params } = this.props.match\n        this.getRestaurantData(params.restaurant_id)\n        this.getReviewsData(params.restaurant_id)\n    }\n\n    getRestaurantData = (restaurant_id) => {\n        let url = `${API.zomato.baseUrl}/restaurant`\n        axios.get(url, {\n            headers: {\n                'user-key': API.zomato.api_key\n            },\n            params: {\n                res_id: restaurant_id\n            }\n        })\n        .then(({ data }) => {\n            this.setState({ restaurant: data })\n        })\n        .catch(err => console.log(err))\n    }\n\n    getReviewsData = (restaurant_id) => {\n        let url = `${API.zomato.baseUrl}/reviews`\n        axios.get(url, {\n          headers: {\n            'user-key': API.zomato.api_key\n          },\n          params: {\n            res_id: restaurant_id\n          }\n        })\n          .then(({ data }) => {\n            this.setState({ reviews: data.user_reviews })\n          })\n          .catch(err => console.log(err))\n    }\n   \n    render() {\n        return (\n        <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n            <div className=\"row\">\n                <div className=\"col-12\" style={{ marginBottom: 20 }}>\n                    <RestaurantProfile \n                    restaurant={this.state.restaurant}\n                    />  \n                </div>\n                <div className=\"col-12\" style={{ marginBottom: 20 }}>\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\n                        { this.state.reviews ? (\n                            this.state.reviews.map(({ review }) => (\n                                <Review\n                                    review={review}\n                                    key={review.id}\n                                />\n                            ))\n                        ) : (\n                            <p>Loading...</p>\n                        )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default RestaurantDetail","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport Footer from './components/Footer/Footer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \nimport City from './pages/City'\nimport RestaurantDetail from './pages/RestaurantDetail'\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire(\"dotenv\").config();"],"sourceRoot":""}